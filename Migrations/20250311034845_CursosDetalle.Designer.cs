// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ronalfy_Jimenez_P2_Ap1.DAL;

#nullable disable

namespace Ronalfy_Jimenez_P2_Ap1.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250311034845_CursosDetalle")]
    partial class CursosDetalle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ronalfy_Jimenez_P2_Ap1.Models.Ciudades", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<double>("MontoBase")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            CiudadId = 1,
                            MontoBase = 1500.0,
                            Nombre = "San francisco"
                        },
                        new
                        {
                            CiudadId = 2,
                            MontoBase = 20000.0,
                            Nombre = "Cotui"
                        },
                        new
                        {
                            CiudadId = 3,
                            MontoBase = 1800.0,
                            Nombre = "La Vega"
                        });
                });

            modelBuilder.Entity("Ronalfy_Jimenez_P2_Ap1.Models.Cursos", b =>
                {
                    b.Property<int>("CursosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursosId"));

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("CursosId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Ronalfy_Jimenez_P2_Ap1.Models.CursosDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int>("CursosId")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("DetalleId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("CursosId");

                    b.ToTable("CursosDetalle");
                });

            modelBuilder.Entity("Ronalfy_Jimenez_P2_Ap1.Models.CursosDetalle", b =>
                {
                    b.HasOne("Ronalfy_Jimenez_P2_Ap1.Models.Ciudades", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ronalfy_Jimenez_P2_Ap1.Models.Cursos", "Curso")
                        .WithMany("CursosDetalle")
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Ronalfy_Jimenez_P2_Ap1.Models.Cursos", b =>
                {
                    b.Navigation("CursosDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
